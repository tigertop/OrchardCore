name: Release - CI
on:
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Build, Test, Deploy
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, windows-2022]
    steps:
    - name: Get the version
      id: get_version
      run: |
        arrTag=(${GITHUB_REF//\// })
        VERSION="4.0.4"
        VERSION="${VERSION//v}"
        echo VERSION:${VERSION}
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
      shell: bash
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: "15"
    - uses: ./.github/actions/setup-dotnet
    - name: Set build number 
      if: matrix.os == 'ubuntu-24.04'
      run: echo "BuildNumber=$(( $GITHUB_RUN_NUMBER + 15471 ))" >> $GITHUB_ENV
    - name: Build
      # NuGetAudit is intentionally not disabled here like it is for other CI builds, because we need to address any
      # vulnerable packages before releasing a new version.
      run: |
        dotnet build -c Release /p:TreatWarningsAsErrors=true /p:RunAnalyzers=true -p:Version=${{ steps.get_version.outputs.VERSION }}
    - name: Deploy release NuGet packages to Azure Artifacts
      if: matrix.os == 'ubuntu-24.04'
      env:
        AZURE_DEVOPS_EXT_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
      run: |
        dotnet pack -c Release --no-build -p:Version=${{ steps.get_version.outputs.VERSION }} -p:TreatWarningsAsErrors=false
        dotnet nuget add source "https://pkgs.dev.azure.com/TopSoft365/_packaging/TopSoftPandora/nuget/v3/index.json" --name "AzureArtifacts" --username "anything" --password "${AZURE_DEVOPS_EXT_PAT}" --store-password-in-clear-text
        dotnet nuget push './src/**/*.nupkg' --source "AzureArtifacts" --api-key "AzureDevOps" --skip-duplicate
    - name: Set up Docker Buildx
      if: matrix.os == 'ubuntu-24.04'
      uses: docker/setup-buildx-action@v3
    - name: Login to DockerHub
      if: matrix.os == 'ubuntu-24.04'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Deploy release docker images
      if: matrix.os == 'ubuntu-24.04'
      shell: pwsh
      run: |
        Get-ChildItem ./src/OrchardCore.Cms.Web/App_Data -Recurse | Remove-Item -Recurse -Confirm:$false
        Get-ChildItem ./src/OrchardCore.Cms.Web/App_Data_Tests -Recurse | Remove-Item -Recurse -Confirm:$false
        $output = [System.IO.Path]::GetFullPath("./.build/release")
        dotnet publish -c Release --property:PublishDir=$output --no-build --framework net9.0
        docker buildx build -f Dockerfile-CI --platform=linux/amd64 -t orchardproject/orchardcore-cms-linux:latest -t orchardproject/orchardcore-cms-linux:${{ steps.get_version.outputs.VERSION }} --push .
        docker buildx build -f Dockerfile-CI --platform=windows/amd64 -t orchardproject/orchardcore-cms-windows:latest -t orchardproject/orchardcore-cms-windows:${{ steps.get_version.outputs.VERSION }} --push .
